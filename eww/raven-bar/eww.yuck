(defvar eww "/usr/local/bin/eww -c $HOME/.config/eww")

(defvar volume_revealed "false")
(defvar bright_revealed "false")
(defvar battery_revealed "false")

(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll current-brightness :interval "1s" "brightnessctl -m -d intel_backlight | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defpoll volume_icon :interval "1s" "scripts/getvol icon")

(defpoll time_hour :interval "1s" "date '+%H'")
(defpoll time_minute :interval "1s" "date '+%M'")

(defpoll battery_icon :interval "1s" "scripts/battery icon")
(defpoll battery_percent :interval "1s" "scripts/battery percent")

(defwindow bar
  :stacking "bg"
  :windowtype "dock"
  :reserve (struts :distance "3.5%" :side "top")
  :geometry (geometry
              :width "90%"
              :height "30px"
              :anchor "top center")
  (centerbox
  (barleft)
  (clock)
  (barright)))

(defwidget barleft []
  (box))

(defwidget barcenter []
  (box))

(defwidget barright []
  (box
    :halign "end"
    :spacing 5
    :space-evenly "false"
    (sliders)
    (battery)))

(defwidget battery []
  (box
    :class "battery"
    :spacing 5
    :space-evenly "false"
    (label :class "battery-icon" :text battery_icon)
    (label :class "battery-percent" :text "${battery_percent}%")))

(defwidget sliders []
  (box
    :class "sliders"
    :spacing 0
    :halign "end"
    :space-evenly "false"
    (brislider)
    (volslider)))

(defwidget clock []
  (box
    :class "clock"
    :spacing 3
    :space-evenly "false"
    (label :text time_hour)
    (label :text "" :class "separator")
    (label :text time_minute)))
  
(defwidget batslider []
  (eventbox
    :onhover "${eww} update battery_revealed=true"
    :onhoverlost "${eww} update battery_revealed=false"
    (box
      :spacing 0
      :space-evenly "false"
      :class "battery-slider"
      (label :class "battery-icon" :text battery_icon)
      (revealer
        :transition "slideright"
        :duration "550ms"
        :reveal "${battery_revealed}"
        (label :class "battery-percent" :text "${battery_percent}%")))))

(defwidget volslider []
  (eventbox
    :onhover "${eww} update volume_revealed=true"
    :onhoverlost "${eww} update volume_revealed=false"
    (box
      :spacing 0
      :space-evenly "false"
      :class "volslider"
      (label :class "audio-icon" :text volume_icon)
      (revealer
        :transition "slideright"
        :duration "550ms"
        :reveal "${volume_revealed}"
        (volbar)))))


(defwidget brislider []
  (eventbox
    :onhover "${eww} update bright_revealed=true"
    :onhoverlost "${eww} update bright_revealed=false"
    (box
      :spacing 0
      :space-evenly "false"
      :class "brightslider"
      (label :class "bright-icon" :text "󰖨")
      (revealer
        :transition "slideright"
        :duration "550ms"
        :reveal "${bright_revealed}"
        (brightbar)))))

(defwidget volbar []
  (scale
    :class "volbar"
    :halign "center"  
    :value current-volume
    :orientation "h"  
    :tooltip "Volume: ${current-volume}%" 
    :max 101 
    :min 0 
    :onchange "amixer -D pulse sset Master {}%" ))

(defwidget brightbar []
  (scale
    :class "brightbar"
    :halign "center"  
    :value current-brightness
    :orientation "h"  
    :max 101 
    :min 0 
    :onchange "brightnessctl set {}%" ))